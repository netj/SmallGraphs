#!/usr/bin/env bash
# run-smallgraph-on-giraph
# Usage: run-smallgraph-on-giraph GIRAPH_VERTEX_CLASSNAME <JAVACODE INPUTGRAPH
# 
# Run a SmallGraph query compiled into state machine java code that extends
# BaseSmallGraphGiraphVertex on the INPUTGRAPH.
#
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2012-03-05
set -eu

Self=`readlink -f "$0"`
Here=`dirname "$Self"`


giraphJars=("$Here"/giraph/target/giraph-*-jar-with-dependencies.jar)
backendJars=("$Here"/target/smallgraphs-giraph-*-jar-with-dependencies.jar)
export HADOOP_CLASSPATH="${backendJars[0]}:${giraphJars[0]}"


# process arguments
[ $# -eq 3 ] || { sed -n '2,/^#$/ s/^# //p' <"$0"; exit 2; }
VertexClass=$1; shift
InputGraphHDFSPath=$1; shift
InputGraphLocalPath=$1; shift



# make sure the target graph is up there
if ! hadoop dfs -test -e "$InputGraphHDFSPath"; then
    if [ -e "$InputGraphLocalPath" ]; then
        hadoop dfs -copyFromLocal "$InputGraphLocalPath"/jsonVertices "$InputGraphHDFSPath"/jsonVertices
    else
        echo >&2 "Target graph does not exists on HDFS($InputGraphHDFSPath) nor local($InputGraphLocalPath)"
        exit 2
    fi
fi


# prepare stuff
tmp=/tmp/smallgiraph.XXXXXX; rm -rf $tmp; mkdir -p $tmp
# FIXME tmp=`mktemp -d /tmp/smallgiraph.XXXXXX`
# TODO make sure $dfstmp is unique
dfstmp=`basename $tmp`
hadoop dfs -rmr $dfstmp >/dev/null || true
rm -rf $tmp/_bsp*
# FIXME trap "rm -rf $tmp" EXIT
cd $tmp


# compile Java code given over stdin
cat >"$VertexClass".java
javac -cp "$HADOOP_CLASSPATH:`hadoop classpath`" \
    -d . \
    "$VertexClass".java \
    #

# create a jar
jar=smallgiraph.jar
jar cf $jar "$VertexClass".class


# and run it
hadoop jar "$jar" org.apache.giraph.GiraphRunner \
    -Dgiraph.SplitMasterWorker=false \
    -libjars "${HADOOP_CLASSPATH//:/,}" \
    "$VertexClass" \
    -w 1 \
    -if edu.stanford.smallgraphs.giraph.PropertyGraphJSONVertexInputFormat \
    -of edu.stanford.smallgraphs.giraph.FinalMatchesOutputFormat \
    -ip "$InputGraphHDFSPath"/jsonVertices \
    -op $dfstmp/output \
    -q >&2 \
    #


# combine resulting matches and output them
hadoop dfs -getmerge $dfstmp/output output
cat output
hadoop dfs -rmr $dfstmp >/dev/null || true
