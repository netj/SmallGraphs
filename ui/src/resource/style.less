/*
 * SmallGraphs LESS stylesheet
 */

body {
  overflow: hidden;
  color: #fff;
}

#title {
  height: 34px;
  padding: 2px;
  font-size: 10px;
  color: #ccc;
  margin-right: 380px;
}
#title h1 {
  display: inline;
  font-size: 18px;
  color: #000;
}
#subtitle {
  padding-left: 5px;
}
#graph-url {
  font-size: 11px;
  color: #000;
  cursor: pointer;
}

#tools {
  position: absolute;
  font-size: 14px;
  top: 14px;
  right: 8px;
  text-align: right;
}
#tools > div {
  display: none;
}
#tools > *.active {
  display: block;
}
#query-run,
#result-refine {
  border-width: 2px;
}
#query-run span,
#result-refine span {
  font-weight: bolder;
  font-size: 1.1em;
}

#dialogs {
  display: none;
}
.dialog {
  background-color: #fff;
  background-repeat: no-repeat !important;
}
.dialog .description {
  display: block;
  margin-top: 10px;
}
#progress-dialog {
  background-image: url(spinner.gif);
  background-position: 20px 20px;
  padding-left: 70px;
}
#error-dialog {
  background-image: url(Crystal_error.png);
  background-position: 15px 15px;
  padding-left: 90px;
}

#aggregation-list, #ordering-list {
  list-style-type: none; 
  margin: 0px;
  padding: 0px;
}
#aggregation-list li, #ordering-list li {
  margin: 2px;
  padding: 2px;
  padding-left: 8px;
}
li .ui-icon {
  display: inline-block;
}

.ui-accordion .ui-accordion-header {
  font-size: 12px;
}
.ui-accordion .ui-accordion-content {
  padding: 10px;
}

#query {
  overflow: hidden;
  border: 1px solid #ccc;
}

#query-type-entry {
  display: none;
}
#query-type-entry.active {
  display: block;
  position: absolute;
}
#query-type-entry input {
  opacity: 0.8;
  text-align: center;
}
.ui-autocomplete {
  text-align: left;
  max-height: 61.8%; /* TODO fix jQuery UI not to overflow the window */
  overflow: auto;
}
.ui-autocomplete li {
  white-space: nowrap;
}
#query-type-entry input, .ui-widget {
  font-size: 0.8em;
}

#query-sketchpad-selectionbox rect {
  fill-opacity: 0;
  stroke-opacity: 0;
}
#query-sketchpad-selectionbox.active rect {
  stroke-opacity: 0.75;
  stroke-dasharray: 3,3;
  stroke-width: 1px;
  stroke: #333;
}

#query-sketchpad-phantom-node rect {
  fill-opacity: 0;
  stroke-opacity: 0;
}
#query-sketchpad-phantom-node.active rect {
  stroke-opacity: 1;
  stroke-dasharray: 5,5;
  stroke-width: 2px;
  stroke: #333;
}

.node text,
.edge text {
  text-anchor: middle;
}

.node rect {
  fill: #f88;
  opacity: 0.9;
  stroke-width: 2px;
}
.attribute.node rect {
  fill: #fc3;
}
.attribute.node text {
  font-size: 0.7em;
}
.node text.constraint {
  text-anchor: start;
  fill: #f33;
}
.aggregate.node.selected rect,
.aggregate.node rect {
  stroke: #666;
  stroke-width: 4px;
  stroke-opacity: 0.75;
  stroke-dasharray: 12,8;
}
.aggregate.node text {
  font-size: 1.25em;
  font-style: italic;
}
.aggregate.attribute.node rect {
  stroke-width: 2px;
  stroke-dasharray: 6,4;
}

.orderby-desc.node rect {
  stroke: #f3f;
}
.orderby-asc.node rect {
  stroke: #3ff;
}

#arrowhead {
  fill: #06c;
}
.edge {
  path {
    stroke: #06c;
    opacity: 0.8;
    stroke-width: 7px;
    stroke-linecap: round;
    marker-end: url(#arrowhead);
    fill: none;
  }
  text {
    font-size: 0.8em;
  }
  &.attribute {
    path {
      stroke-width: 5px;
    }
  }
}

.invalid.node rect {
  opacity: 0.4;
  stroke: #c33;
  stroke-width: 2px;
  stroke-dasharray: 10,5;
}
.invalid.edge path {
  opacity: 0.4;
  stroke-dasharray: 14,14;
}

.edge.drawing path {
  /* XXX: no arrowhead seems more confusing :(
  marker-end: none; marker-end: url();
  */
}

#query-sketchpad .attribute.node:hover rect { stroke: #f63; }
#query-sketchpad .node:hover rect { stroke: #900; }
#query-sketchpad .edge:hover path { stroke: #039; }
#query-sketchpad .node.selected:hover rect,
#query-sketchpad .edge.selected:hover path { stroke: #090; }
#query-sketchpad .node.selected       rect,
#query-sketchpad .edge.selected       path { stroke: #3c3; }

#query-sketchpad text { cursor: default; }


#results {
  display: inline;
}
#result-info {
  color: #999;
  margin-top: 40px;
}
#result-more {
  display: none;
}
#result-more.active {
  display: inline;
  margin: 0px 10px;
}

.result {
  display: inline-block;
  border: 2px solid #ccc;
  padding: 8px;
  margin: 2px;
}
.result.selected {
  border: 3px solid #3c3;
  margin: 1px;
}

.result .node rect {
  fill: #ccc;
  stroke-width: 1px;
}
#result-arrowhead,
.result .edge path {
  stroke: #ccc;
  stroke-width: 2px;
}
#result-arrowhead {
  fill: #ccc;
}
.result .edge path {
  marker-end: url(#result-arrowhead);
}

.result .node rect.overlay {
  opacity: 0.75;
  stroke: none;
  stroke-width: 0px;
  stroke-dasharray: none;
}

// vim:ft=less:sw=2:sts=2:ts=8
